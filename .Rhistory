geom_sf(data = btp_sf) +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]))
c(bb_sf[[1]], bb_sf[[3]])
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]), ylim = c(bb_sf[[2]], bb_sf[[4]])
)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf) +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]), ylim = c(bb_sf[[2]], bb_sf[[4]]))
strat_fp_poly_sf
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf) +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = 51.53998, 1.54245))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf) +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = c(51.53998, 1.54245))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf) +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = c(51.53998, 51.54245))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf, col = "Red") +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = c(51.53998, 51.54245))
library(jsonlite)
library(osmdata)
library(ggplot2)
library(sf)
library(readr)
library(dplyr)
library(tidyr)
library(purrr)
library(patchwork)
library(stringr)
# OSM query ==============================================================================================
# All queries begin with a bounding box specification i.e. the study region.
# This can be obtained manually, which requires some existing knowledge about
# an area using the latitude and longitude coordinates, but it is generally
# easier to use a search term. For instance
# no longer works.
# bb_sf <- getbb(place_name = "Greater London United Kingdom", format_out = "sf_polygon")
bb_gl <- c(-0.51037, 51.28676, 0.33401, 51.69187)
osm_stat_sf <- opq(bbox = bb_gl) %>% # select bounding box
add_osm_feature(key = 'public_transport', value = 'station') %>%           # select features
osmdata_sf()                                                               # specify class (sf or sp)
# trim_osmdata(bb_poly = bb_sf)                                           # trim by bounding box
# View contents.
osm_stat_sf
# Extract points only.
temp <- osm_stat_sf$osm_polygons
osm_stat_sf <- osm_stat_sf$osm_points
# Check the network tags.
table(osm_stat_sf$line)
# Filter jubern line only/
osm_jub_sf <- osm_stat_sf %>%
mutate(tube_line = line) %>%
filter(str_detect(tube_line, "Jubilee"))
osm_jub_sf <- st_transform(osm_jub_sf, 27700)
# bb_sf      <- st_transform(bb_sf, 27700)
ggplot() +
geom_sf(data = osm_jub_sf, size = 0.8)
# TfL scrape ==============================================================================================
# Scape jubern line locations from TfL. Warning is fine.
api_call <- fromJSON(readLines("https://api.tfl.gov.uk/line/jubilee/stoppoints"))
# Extract bus stop names and the lat-long coordinates, transform to BNG.
tfl_jub_sf <- api_call %>%
select(commonName, lat, lon) %>%
st_as_sf(coords = c(x = "lon", y = "lat"), crs = 4326) %>%
st_transform(27700)
# Plot difference.
ggplot() +
geom_sf(data = osm_jub_sf) +
geom_sf(data = tfl_jub_sf, color = "red", alpha = 0.5)
# Save before someone changes the lines.
# temp_osm_jub_sf <- osm_jub_sf %>%
#   select(name, geometry)
#
# st_write(obj = temp_osm_jub_sf, dsn = "data/jubilee_osm.shp")
# st_write(obj = tfl_jub_sf, dsn = "data/jubilee_tfl.shp")
# Assessing the impact in terms of crime. BTP data in January 2020.
btp_df <- read_csv("data/2020-01-btp-street.csv")
# Make spatial.
btp_sf <- btp_df %>%
drop_na(Longitude, Latitude) %>%
st_as_sf(coords = c(x = "Longitude", y = "Latitude"), crs = 4326) %>%
st_transform(27700)
# st_intersection(bb_sf)
# Create buffers to define 'in and around'.
osm_buff_sf <- st_buffer(osm_jub_sf, dist = 50)
tfl_buff_sf <- st_buffer(tfl_jub_sf, dist = 50)
# Aggregate to each station.
osm_jub_sf <- osm_buff_sf %>%
mutate(crimes = lengths(st_intersects(osm_buff_sf, btp_sf)))
tfl_jub_sf <- tfl_buff_sf %>%
mutate(crimes = lengths(st_intersects(tfl_buff_sf, btp_sf)))
# Map out difference.
p1 <- ggplot(data = osm_jub_sf) +
geom_sf(mapping = aes(colour = crimes), size = 3) +
labs(title = "Open Street Map") +
scale_colour_viridis_c(lim = c(0,42))
p2 <- ggplot(data = tfl_jub_sf) +
geom_sf(mapping = aes(colour = crimes), size = 3) +
labs(title = "Transport for London") +
scale_colour_viridis_c(lim = c(0,42))
p1 / p2
sum(osm_jub_sf$crimes) # 168
sum(tfl_jub_sf$crimes) # 136
# Which is the crime hotspot at the end of the line?
osm_jub_sf %>%
arrange(desc(crimes)) %>%
slice(1) %>%
pull(name)
# Straford.
# let's plot a comparison map of this station location. We can get building footprints.
stratford_osm_sf <- osm_jub_sf %>%
arrange(desc(crimes)) %>%
slice(1)
stratford_tfl_sf <- tfl_jub_sf %>%
filter(commonName == "Stratford Underground Station")
# extract bb of stratford to create a mini study region.
bb_sf <- stratford_osm_sf %>%
st_bbox() %>%
st_as_sfc(crs = 27700) %>%
st_transform(crs = 4326) %>%
st_bbox()
strat_bb <- c(bb_sf[[1]],bb_sf[[2]],bb_sf[[3]],bb_sf[[4]])
# Get building footprints.
strat_fp_sf <- opq(strat_bb) %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
# Get railway line.
strat_rail_sf <- opq(strat_bb) %>%
add_osm_feature(key = 'railway', value = 'subway') %>%
osmdata_sf()
# Polygons only.
strat_fp_poly_sf <- strat_fp_sf$osm_polygons
stat_rail_lines_sf <- strat_rail_sf$osm_lines
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf, col = "Red") +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = c(51.53998, 51.54245))
strat_fp_poly_sf
stratford_osm_sf
btp_sf
stratford_tfl_sf
stratford_osm_sf
# Make WGS 84 to match OSM data.
strat_fp_poly_sf <- st_transform(strat_fp_poly_sf, 4326)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = btp_sf, col = "Red") +
coord_sf(xlim = c(-0.0053018, -0.0024744), ylim = c(51.53998, 51.54245))
View(tfl_jub_sf)
# Get the crimes that OSM managed to capture.
strat_osm_btp_sf <- st_intersection(stratford_osm_sf, btp_sf)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
stratford_osm_sf
btp_sf
strat_fp_poly_sf
# Make WGS 84 to match OSM data.
strat_fp_poly_sf <- st_transform(strat_fp_poly_sf, 27700)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
stratford_tfl_sf
# Get building footprints.
strat_fp_sf <- opq(bbox = "Stratford Underground Station") %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
# Get building footprints.
test_sf <- opq(bbox = "Stratford Underground Station") %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
# Get building footprints.
test_sf <- opq(bbox = "Stratford London Underground Station") %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
stratford_osm_sf
stratford_osm_sf %>%
st_bbox()
stratford_osm_sf %>%
st_bbox()
stratford_osm_sf %>%
st_transform(crs = 27700) %>%
st_bbox()
# extract bb of stratford to create a mini study region.
bb_sf <- stratford_osm_sf %>%
st_transform(crs = 27700) %>%
st_bbox()
strat_bb <- c(bb_sf[[1]],bb_sf[[2]],bb_sf[[3]],bb_sf[[4]])
strat_bb
# extract bb of stratford to create a mini study region.
bb_sf <- stratford_osm_sf %>%
st_transform(crs = 4326) %>%
st_bbox()
bb_sf
strat_bb <- c(bb_sf[[1]],bb_sf[[2]],bb_sf[[3]],bb_sf[[4]])
# Get building footprints.
strat_fp_sf <- opq(strat_bb) %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
# Polygons only.
strat_fp_poly_sf <- strat_fp_sf$osm_polygons
# Get the crimes that OSM managed to capture.
strat_osm_btp_sf <- st_intersection(stratford_osm_sf, btp_sf)
# Make WGS 84 to match OSM data.
strat_fp_poly_sf <- st_transform(strat_fp_poly_sf, 27700)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
# extract bb of stratford to create a mini study region.
bb_sf <- stratford_osm_sf %>%
st_transform(crs = 4326) %>%
st_bbox() %>%
pluck(1:4)
stratford_osm_sf %>%
st_transform(crs = 4326) %>%
st_bbox()
# extract bb of stratford to create a mini study region.
bb_sf <- stratford_osm_sf %>%
st_transform(crs = 4326) %>%
st_bbox() %>%
group_split()
bb_sf <- stratford_osm_sf %>%
st_transform(crs = 4326) %>%
st_bbox()
strat_bb <- c(bb_sf[[1]],bb_sf[[2]],bb_sf[[3]],bb_sf[[4]])
# Get building footprints.
strat_fp_sf <- opq(strat_bb) %>%
add_osm_feature(key = 'building') %>%
osmdata_sf()
# Polygons only.
strat_fp_poly_sf <- strat_fp_sf$osm_polygons
# Get the crimes that OSM managed to capture.
strat_osm_btp_sf <- st_intersection(stratford_osm_sf, btp_sf)
# Make WGS 84 to match OSM data.
strat_fp_poly_sf <- st_transform(strat_fp_poly_sf, 27700)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
# Check names
tfl_jub_df <- tfl_jub_sf %>%
mutate(name = str_remove(commonName, "Underground Station")) %>%
as_tibble()
osm_jub_df <- osm_jub_sf %>%
as_tibble() %>%
select(name)
# Join to demo that names match perfectly.
names_df <- left_join(tfl_jub_df, osm_jub_df, by = "name")
View(names_df)
# Check names.
strat_fp_poly_sf$building
# Check names.
strat_fp_poly_sf$osm_id
# Check names.
strat_fp_poly_sf$building.levels
View(strat_fp_poly_sf)
osm_jub_sf
osm_jub_sf
names(osm_jub_sf)
table(osm_jub_sf$name.en)
table(osm_jub_sf$`name.en``)
table(osm_jub_sf$`name.en`)
View(osm_jub_sf)
stratford_osm_sf <- osm_jub_sf %>%
filter(name == "Stratford")
stratford_osm_sf
dim(stratford_osm_sf)
class(strat_bb)
nrow(strat_osm_btp_sf)
strat_fp_sf <- opq(strat_bb) %>%
add_osm_feature(key = 'railway') %>%
osmdata_sf()
strat_fp_sf
lines <- strat_fp_sf$osm_lines
plot(st_geometry(strat_fp_poly_sf))
plot(st_geometry(lines), add = T)
plot(st_geometry(lines), add = T, col = "Red")
strat_fp_poly_sf
lines <- st_transform(lines, 27700)
plot(st_geometry(strat_fp_poly_sf))
plot(st_geometry(lines), add = T, col = "Red")
table(strat_osm_btp_sf$Crime.type)
test <- st_intersection(strat_fp_poly_sf, lines)
test
plot(st_geometry(strat_fp_poly_sf))
plot(st_geometry(test), add = T, col = "Red")
coord_sf(xlim = c((bb_sf[[1]], (bb_sf[[2]]), ylim = (bb_sf[[2]], (bb_sf[[4]]))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[2]]), ylim = bb_sf[[2]], bb_sf[[4]]))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]), ylim = bb_sf[[2]], bb_sf[[4]]))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]), ylim = bb_sf[[2]], bb_sf[[4]])
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(xlim = c(bb_sf[[1]], bb_sf[[3]]), ylim = c(bb_sf[[2]], bb_sf[[4]]))
strat_bb
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(xlim = c(bb_sf[[2]], bb_sf[[4]]), ylim = c(bb_sf[[1]], bb_sf[[3]]))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
coord_sf(expand = F)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
geom_sf(data = lines) +
coord_sf(expand = F)
lines
lines_cropped <- st_crop(lines, strat_bb)
stratford_osm_sf
strat_fp_poly_sf
bb_station_sf <- strat_fp_poly_sf %>%
st_bbox()
bb_station_sf <- strat_fp_poly_sf %>%
st_bbox()
station_bb <- c(bb_station_sf[[1]], bb_station_sf[[2]], bb_station_sf[[3]], bb_station_sf[[4]])
lines_cropped <- st_crop(lines, station_bb)
?st_crop
lines_cropped <- st_crop(lines, st_bbox(strat_fp_sf))
lines_cropped <- st_crop(lines, st_bbox(strat_fp_poly_sf))
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
geom_sf(data = lines_cropped)
source('~/GitHub/osm_crim/scripts/osm_explore_tube.R')
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
geom_sf(data = lines_cropped, "grey", size = 1)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
geom_sf(data = lines_cropped, "brown", size = 1)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
geom_sf(data = lines_cropped, col = "brown", size = 1)
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = lines_cropped, col = "brown", size = 1) +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
# Quick plot.
ggplot() +
theme_bw() +
geom_sf(data = lines_cropped, col = "brown") +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
# Save them.
st_write(obj = strat_fp_poly_sf, dsn = "data/stratford_osm.shp")
# Quick plot.
strat_ff <- ggplot() +
theme_bw() +
geom_sf(data = lines_cropped, col = "brown") +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
# Quick plot.
strat_gg <- ggplot() +
theme_bw() +
geom_sf(data = lines_cropped, col = "brown") +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
ggsave(plot = strat_gg, file = "img/stratford.png", width = 12, height = 14, unit = "cm")
# Quick plot.
strat_gg <- ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red")
ggsave(plot = strat_gg, file = "img/stratford.png", width = 12, height = 14, unit = "cm")
# Quick plot.
strat_gg <- ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
theme(axis.text = element_text(size = 4))
ggsave(plot = strat_gg, file = "img/stratford.png", width = 12, height = 14, unit = "cm")
# Quick plot.
strat_gg <- ggplot() +
theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
theme(axis.text = element_text(size = 6))
ggsave(plot = strat_gg, file = "img/stratford.png", width = 12, height = 14, unit = "cm")
# Quick plot.
strat_gg <- ggplot() +
# theme_bw() +
geom_sf(data = strat_fp_poly_sf, fill = "black") +
geom_sf(data = stratford_osm_sf, fill = "pink", alpha = 0.3) +
geom_sf(data = stratford_tfl_sf, fill = "blue", alpha = 0.3) +
geom_sf(data = strat_osm_btp_sf, col = "Red") +
theme(axis.text = element_text(size = 6))
ggsave(plot = strat_gg, file = "img/stratford.png", width = 12, height = 14, unit = "cm")
btp_df <- read_csv("https://github.com/langtonhugh/osm_crim/raw/master/
data/2020-01-btp-street.csv")
