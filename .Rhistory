dir.create("data")
dir.create("scripts")
dir.create("docs")
dir.create("output")
dir.create("results")
install.packages("osmdata")
library(osmdata)
library(ggplot2)
library(sf)
?remotes
library(devtools)
?remotes
?getbb
# All queries begin with a bounding box specification i.e. the study region.
# This can be obtained manually, which requires some existing knowledge about
# an area using the latitude and longitude coordinates.
q <- opq(bbox = c(53.5, -2.31, 53.4, -2.21))
q
# All queries begin with a bounding box specification i.e. the study region.
# This can be obtained manually, which requires some existing knowledge about
# an area using the latitude and longitude coordinates.
q <- opq(bbox = c(53.49, -2.26, 53.46, -2.22))
opq(bbox = q) %>%
add_osm_feature(key = 'highway', value = 'motorway')
q
opq(bbox = c(53.49, -2.26, 53.46, -2.22)) %>%
add_osm_feature(key = 'highway', value = 'motorway')
opq(bbox = c(53.49, -2.26, 53.46, -2.22)) %>%
add_osm_feature(key = 'highway', value = 'motorway') %>%
osmdata_sf()
opq(bbox = "greater london uk") %>%
add_osm_feature(key = 'highway', value = 'motorway') %>%
osmdata_sf()
p <- opq(bbox = "greater london uk") %>%
add_osm_feature(key = 'highway', value = 'motorway') %>%
osmdata_sf()
plot(st_geometry(p))
plot(st_geometry(p["osmdata_sf"]))
plot(st_geometry(p[["osmdata_sf"]]))
p <- opq(bbox = "greater london uk") %>%
add_osm_feature(key = 'highway', value = 'motorway') %>%
osmdata_sf() %>%
tim_osmdata()
p <- opq(bbox = "greater london uk") %>%                    # select bounding box
add_osm_feature(key = 'highway', value = 'motorway') %>%
osmdata_sf() %>%
trim_osmdata()
bb <- getbb(place_name = "greater london uk", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'highway', value = 'motorway') %>%  # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'bar') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_polygons
plot(st_geometry(p.sf))
p.sf <- p$osm_points
p.sf <- p$osm_polygons
p.sf <- p$osm_lines
p.sf <- p$osm_points
plot(st_geometry(p.sf))
bb <- getbb(place_name = "manchester uk", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'bar') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
View(p.sf)
(available_tags("amenity")
)
?add_osm_feature
?available_features("pub")
available_features("pub")
available_features(["pub"])
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'bar') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
bb <- getbb(place_name = "united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'aeroway', value = 'hangar') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
library(osmdata)
library(ggplot2)
library(sf)
# All queries begin with a bounding box specification i.e. the study region.
# This can be obtained manually, which requires some existing knowledge about
# an area using the latitude and longitude coordinates, but it is generally
# easier to use a search term.
bb <- getbb(place_name = "united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'aeroway', value = 'windsock') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
bb <- getbb(place_name = "greater london united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'aeroway', value = 'windsock') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'drinking water') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
bb <- getbb(place_name = "greater london united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'drinking water') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'drinking_water') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
# easier to use a search term.
bb <- getbb(place_name = "greater manchester united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'amenity', value = 'drinking_water') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'railway', value = 'tram') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_points
plot(st_geometry(p.sf))
bb <- getbb(place_name = "greater manchester united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                     # select bounding box
add_osm_feature(key = 'railway', value = 'tram') %>%       # select features
osmdata_sf() %>%                                          # specify class
trim_osmdata(bb_poly = bb)                                # choose to trim featrues to bb
class(p)
p.sf <- p$osm_lines
plot(st_geometry(p.sf))
library(osmdata)
library(ggplot2)
library(sf)
library(readr)
library(dplyr)
library(tidyr)
# All queries begin with a bounding box specification i.e. the study region.
# This can be obtained manually, which requires some existing knowledge about
# an area using the latitude and longitude coordinates, but it is generally
# easier to use a search term.
bb <- getbb(place_name = "manchester united kingdom", format_out = "sf_polygon")
p <- opq(bbox = bb) %>%                                           # select bounding box
add_osm_feature(key = 'amenity', value = 'bicycle_parking') %>% # select features
osmdata_sf()                                                    # specify class (sf or sp)
p
p.sf <- p$osm_points # extract point only
ggplot() +
geom_sf(data = bb) +
geom_sf(data = p.sf)
p.sf  <- st_transform(p.sf, 27700)
bb.sf <- st_transform(bb, 27700)
p.clip.sf <- st_intersection(bb.sf, p.sf)
ggplot() +
geom_sf(data = bb) +
geom_sf(data = p.clip.sf, size = 0.5)
# crime data
crime.df <- read_csv("data/2019-01-greater-manchester-street.csv")
bike.crime.sf <- crime.df %>%
filter(`Crime type` == "Bicycle theft") %>%
drop_na(Longitude, Latitude) %>%
st_as_sf(coords = c(x = "Longitude", y = "Latitude"), crs = 4326) %>%
st_transform(27700) %>%
st_intersection(bb.sf)
# plot
ggplot() +
geom_sf(data = bb) +
geom_sf(data = p.clip.sf, size = 0.8) +
geom_sf(data = bike.crime.sf, size = 0.8, col = "red")
# plot
ggplot() +
geom_sf(data = bb) +
geom_sf(data = p.clip.sf, size = 0.8) +
geom_sf(data = bike.crime.sf, size = 0.8, col = "red", alpha = 0.6)
